plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'

}


android {
    namespace 'br.com.felnanuke.mymusicapp'
    compileSdk 34

    defaultConfig {
        applicationId "br.com.felnanuke.mymusicapp"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

// Clean generated files before each build to prevent virtual class issues
tasks.register('cleanGenerated', Delete) {
    description = 'Clean generated files and caches that might cause virtual class issues'
    group = 'build'
    
    delete 'build/generated'
    delete 'build/intermediates'
    delete 'build/kotlin'
    delete 'build/kspCaches'
    delete 'build/tmp'
    delete '.cxx'
    delete 'src/main/cpp/.cxx'
    
    // Clean Hilt generated files specifically
    delete 'build/generated/ksp'
    delete 'build/generated/ap_generated_sources'
    delete 'build/intermediates/annotation_processor_list'
    delete 'build/intermediates/javac'
}

// Clean Kotlin compilation cache
tasks.register('cleanKotlin', Delete) {
    description = 'Clean Kotlin compilation cache'
    group = 'build'
    
    delete 'build/kotlin'
    delete 'build/kspCaches'
    delete '.gradle/kotlin'
}

// Auto-clean before critical build tasks
tasks.configureEach { task ->
    if (task.name.startsWith('compile') || 
        task.name.startsWith('ksp') || 
        task.name == 'assembleDebug' ||
        task.name == 'assembleRelease') {
        task.dependsOn cleanGenerated
    }
}

// Ensure clean runs before KSP tasks to prevent Hilt/Dagger issues
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    dependsOn cleanKotlin
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation "androidx.activity:activity-compose:1.8.2"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.2'
    implementation "androidx.compose.material:material:$compose_version"
    implementation 'androidx.documentfile:documentfile:1.0.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation 'com.google.dagger:hilt-android:2.50'
    ksp 'com.google.dagger:hilt-compiler:2.50'
    implementation 'io.coil-kt:coil-compose:2.5.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    implementation project(':audiowaveform')
    implementation project(':amplituda')
    implementation("org.burnoutcrew.composereorderable:reorderable:0.9.6")
    implementation 'com.google.accompanist:accompanist-pager:0.32.0'
    implementation("androidx.media:media:1.7.0")
}