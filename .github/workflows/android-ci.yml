name: Android CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [23, 29, 33]
        build-type: [debug]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Install CMake and NDK
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Install Android NDK and CMake
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;21.1.6352462"
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "cmake;3.22.1"
        
    - name: Set NDK and CMake environment variables
      run: |
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/21.1.6352462" >> $GITHUB_ENV
        echo "CMAKE_HOME=$ANDROID_HOME/cmake/3.22.1" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/cmake/3.22.1/bin:$PATH" >> $GITHUB_ENV
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Verify CMake installation
      run: |
        echo "Checking CMake availability:"
        which cmake || echo "CMake not found in PATH"
        cmake --version || echo "CMake version check failed"
        ls -la $ANDROID_HOME/cmake/ || echo "CMake not found in Android SDK"
        echo "NDK location:"
        ls -la $ANDROID_HOME/ndk/ || echo "NDK not found"
      
    - name: Clean project
      run: ./gradlew clean
      
    - name: Run lint
      run: ./gradlew lintDebug
      
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest
      
    - name: Generate test coverage report
      run: ./gradlew jacocoTestReport
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./mymusicapp/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: |
          ${{ github.workspace }}/mymusicapp/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 40
        min-coverage-changed-files: 60
        title: Code Coverage Report
        update-comment: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          mymusicapp/build/reports/
          mymusicapp/build/test-results/
          
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-api-${{ matrix.api-level }}
        path: mymusicapp/build/outputs/apk/debug/*.apk

  instrumented-tests:
    runs-on: macOS-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Install CMake and NDK
      run: |
        brew install cmake ninja
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Install Android NDK and CMake
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;21.1.6352462"
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "cmake;3.22.1"
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run instrumented tests on emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: default
        arch: x86_64
        script: ./gradlew connectedAndroidTest
        
    - name: Upload instrumented test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: instrumented-test-results
        path: mymusicapp/build/reports/androidTests/

  security:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Run dependency vulnerability scan with Gradle
      run: |
        chmod +x gradlew
        ./gradlew dependencyCheckAnalyze || echo "Dependency check completed with warnings"
      continue-on-error: true
      
    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: build/reports/dependency-check/
      continue-on-error: true
